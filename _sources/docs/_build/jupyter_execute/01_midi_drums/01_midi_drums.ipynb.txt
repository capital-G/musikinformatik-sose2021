{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysing drum patterns from MIDI files\n",
    "\n",
    "In our first lesson we want to get to know how to work with datasets so we can\n",
    "\n",
    "* parse a dataset\n",
    "* analyse the dataset so it matches our expectations and we did not screw up during parsing\n",
    "\n",
    "After this is done we want to take a look at how we can generate new drum patterns from the existing one.\n",
    "But in order to do this we want to take a look at the quantisation (?) of our patterns.\n",
    "\n",
    "The cleaning of the dataset and setting the data up properly takes the most time in such experiments but if one makes errors here those errors will propagate through our system - so its good to spend some time at this task."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import glob\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from helpers.helpers import *\n",
    "\n",
    "np.random.seed(42)  # makes the randomness deterministic\n",
    "\n",
    "%matplotlib inline\n",
    "# todo: try %matplotlib widget\n",
    "plt.rcParams['figure.figsize'] = (15, 5)\n",
    "plt.rcParams['axes.grid'] = True"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting the dataset\n",
    "\n",
    "As our methods rely on data we need a way to obtain such data.\n",
    "Of course we start to get into difficult teritory here from a copyright point of view - so for now we will rely on public domain datasets?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Parsing the dataset\n",
    "\n",
    "When working with large sets of files the unix utility [glob](https://en.wikipedia.org/wiki/Glob_(programming)) comes in handy as we can describe the pattern of the file paths we want to match instead of listing all files.\n",
    "\n",
    "When we take a quick look at the data set we see that there are two occurences of common file pattens:\n",
    "\n",
    "```\n",
    "midi_dataset/C/Celine Dion - (If-There-Was) Any Other Way.mid\n",
    "midi_dataset/A/A/A AH.The living daylights.mid\n",
    "```\n",
    "\n",
    "So we have either\n",
    "\n",
    "* a single character folder in which `.mid` files are\n",
    "* a single character folder with another single character folder in which `.mid` files are\n",
    "\n",
    "Some googling for *glob any depth only extension* reveals [this stack overflow answer](https://stackoverflow.com/a/14798263/3475778) from which we can now deduce our glob pattern to match the files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 39712 midi files in dataset\n"
     ]
    }
   ],
   "source": [
    "GLOB_PATTERN = '../datasets/midi_dataset/**/*.mid'\n",
    "midi_files = glob.glob(GLOB_PATTERN, recursive=True)\n",
    "print(f'Found {len(midi_files)} midi files in dataset')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['../datasets/midi_dataset/A/A/ArminVanBuuren_-_ComingHome__karimstar95_20120526025524.mid',\n",
       "       '../datasets/midi_dataset/R/R/RevolutionsOverture.mid',\n",
       "       '../datasets/midi_dataset/P/P/pink-dont_let_me_get_me.mid',\n",
       "       '../datasets/midi_dataset/S/S/Sixpence_None_The_Richer_Kiss_Me.mid',\n",
       "       '../datasets/midi_dataset/T/T/The_Everly_Brothers_-_Bye_Bye_Love.mid'],\n",
       "      dtype='<U265')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# select 5 random files\n",
    "np.random.choice(midi_files, 5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But how are sure that we matched every midi file in our folder?\n",
    "We can simply match every file in our dataset directory and show us the differences by using [sets](https://realpython.com/python-sets/)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Did not match 765 files\n"
     ]
    }
   ],
   "source": [
    "missed_files = set(glob.glob('../datasets/midi_dataset/**/*.*', recursive=True)) - set(midi_files)\n",
    "print(f'Did not match {len(missed_files)} files')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It turns out that we missed some files.\n",
    "Lets take a look at them using [random.choice](https://numpy.org/doc/stable/reference/random/generated/numpy.random.choice.html) from the numpy library.\n",
    "But as this function does not work with sets we need to transform the set to a list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['../datasets/midi_dataset/J/J/J.CLIFF.I can see clearly now.MID',\n",
       "       '../datasets/midi_dataset/A/A/ARMSTRONG.On the sun K.MID',\n",
       "       '../datasets/midi_dataset/V/V/VANNELLI.Wheels of life.MID',\n",
       "       '../datasets/midi_dataset/D/D/DIRE STRAITS.Heavy fuel K.MID',\n",
       "       '../datasets/midi_dataset/G/G/GREENDAY.Minority.MID'],\n",
       "      dtype='<U114')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.random.choice(list(missed_files), 5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It seems there are files missing that have a capitalized file extension `.MID`.\n",
    "\n",
    "But lets not rely on the few examples, lets use a [list comprehension](https://realpython.com/list-comprehension-python/) to filter out all examples that are not ending in a capitalized manner."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['../datasets/midi_dataset/S/S/standbyyourman.midi',\n",
       " '../datasets/midi_dataset/W/W/Wollt ihr das bett in flammen sehen.Mid',\n",
       " '../datasets/midi_dataset/M/M/MM-personal jesus.midi',\n",
       " '../datasets/midi_dataset/M/M/mike_koglin_&_dj_uto__time__zoik.midi',\n",
       " '../datasets/midi_dataset/S/S/Stripped [Rammstein].MIDi',\n",
       " '../datasets/midi_dataset/S/S/S.ROGERS BAND.Alzati la gonna K.Mid',\n",
       " '../datasets/midi_dataset/R/R/rhapsodyinblue.midi',\n",
       " '../datasets/midi_dataset/L/L/littlebrownjug.midi']"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[f for f in list(missed_files) if not f.endswith('.MID')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that we are still missing the files that have `.Mid`, `.midi` and `.MIDi` as extension.\n",
    "If we include these we will now have matched all files of our dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 40477 midi files in dataset\n"
     ]
    }
   ],
   "source": [
    "for ext in ['MID', 'Mid', 'midi', 'MIDi']:\n",
    "    MID_GLOB_PATTERN = f'../datasets/midi_dataset/**/*.{ext}'\n",
    "    midi_files += glob.glob(MID_GLOB_PATTERN, recursive=True)\n",
    "print(f'Found {len(midi_files)} midi files in dataset')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Did not match 0 files\n"
     ]
    }
   ],
   "source": [
    "missed_files = set(glob.glob('../datasets/midi_dataset/**/*.*', recursive=True)) - set(midi_files)\n",
    "print(f'Did not match {len(missed_files)} files')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Of course we could have just matched every file in the directory but then we would not have those exercises and one will at one point work with *dirty* datasets so its good to have at least some experience on how to inspect just the files of our dataset.\n",
    "\n",
    "Also it is always a good idea to only include such files into the dataset that we expect because having an unexpected file in the dataset needs to be avoided because this can mess up our results."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Inspecting the data\n",
    "\n",
    "Now as we have all file paths available it is a good practice to take a first look at the data.\n",
    "We need to understand how the information we are interested in is accessible and also that it is probably not standardized - as we have seen above with the filenames already. \n",
    "\n",
    "To work with music notation we will use the python library [music21](https://web.mit.edu/music21/) from the MIT and [pretty_midi](https://github.com/craffel/pretty-midi) to inspect the MIDI files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "from music21 import converter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Selected ../datasets/midi_dataset/A/A/AreYouAfraidOfTheDark.mid as example MIDI file\n"
     ]
    }
   ],
   "source": [
    "example_midi_file = np.random.choice(midi_files)\n",
    "print(f'Selected {example_midi_file} as example MIDI file')\n",
    "example_stream = converter.parse(example_midi_file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{0.0} <music21.stream.Part 0x1089b6370>\n",
      "    {0.0} <music21.instrument.Piano 'Theme from Love Story: piano'>\n",
      "    {0.0} <music21.key.Key of C major>\n",
      "    {0.0} <music21.stream.Voice 0x152f5b190>\n",
      "        {0.0} <music21.note.Rest rest>\n",
      "        {8.0} <music21.note.Note A>\n",
      "        {8.75} <music21.note.Note C>\n",
      "        {9.0} <music21.note.Note E>\n",
      "        {9.25} <music21.note.Rest rest>\n",
      "        {9.3333} <music21.note.Note A>\n"
     ]
    }
   ],
   "source": [
    "print(stream_string(example_stream))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see a single score can take some time to process and analyse.\n",
    "So before we process every file from our dataset we should take a look at a subset to watch out for any patterns.\n",
    "\n",
    "Also it is worth making some research so we can reduce the amount of data we need to process.\n",
    "From the [wikipedia article on General MIDI (GM)](https://en.wikipedia.org/wiki/General_MIDI#Percussive) we can see that percussive tracks should be on channel 10.\n",
    "\n",
    "music21 has [a build in MIDI library](https://web.mit.edu/music21/doc/moduleReference/moduleMidi.html) but it is rather difficult and slow to extract the drums using music21 which is why we use *pretty_midi* for this task.\n",
    "\n",
    "The [docs](https://web.mit.edu/music21/doc/moduleReference/moduleConverter.html) reveal that `music21.converter` seems to be the proper package.\n",
    "\n",
    "We also start annotating our dataset using [pandas](https://pandas.pydata.org/) which is a library for data analysis and manipulation to keep track of any metadata the files have.\n",
    "Especially the [apply](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html) method comes in handy here as we start with a list of MIDI file paths (see `load_midi_df`) and then we want to extend this list with some information from our MIDI file by applying the `parse_midi` function to all rows of our list.\n",
    "\n",
    "Additionally we will use [caching](https://en.wikipedia.org/wiki/Cache_(computing)) because the meta-analyis of our MIDI files takes about 40 minutes on my MacBook.\n",
    "Caching means that we will store the results on the hard drive so once we calculated them we do not need to re-calculate them because we will just load the files from the hard drive.\n",
    "It is a common practice in data science to write a function which either loads the data from a file or generates the file we are using as generating or calculating the data is a step which takes often a long time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import pretty_midi as pm\n",
    "from mido import KeySignatureError\n",
    "import swifter\n",
    "\n",
    "def parse_midi(row) -> bool:\n",
    "    \"\"\"\n",
    "    Adds information about the MIDI file to a DataFrame row\n",
    "    \"\"\"\n",
    "    try:\n",
    "        sound = pm.PrettyMIDI(row['file_path'])\n",
    "        row['midi_error'] = False\n",
    "    # those are errors that were popping up when the whole dataset was parsed\n",
    "    except (OSError, ValueError, IndexError, KeySignatureError, EOFError, ZeroDivisionError):\n",
    "        row['midi_error'] = True\n",
    "        return row\n",
    "    \n",
    "    try:\n",
    "        row['beat_start'] = sound.estimate_beat_start()\n",
    "        row['tempo'] = sound.estimate_tempo()\n",
    "        row['end_time'] = sound.get_end_time()\n",
    "        row['drums'] = any([i.is_drum for i in sound.instruments])\n",
    "        row['resolution'] = sound.resolution\n",
    "        # row['pitch_class_hist'] = sound.get_pitch_class_histogram()\n",
    "        row['instrument_names'] = [i.name.strip() for i in sound.instruments]\n",
    "        row['num_time_signature_changes'] = len(sound.time_signature_changes)\n",
    "    except ValueError as e:\n",
    "        # ValueError: Can't estimate beat start when there are no notes.\n",
    "        # ValueError: Can't provide a global tempo estimate when there are fewer than two notes.\n",
    "        print(f\"Could not parse MIDI file {row['file_path']}: {e}\")\n",
    "    \n",
    "    return row\n",
    "\n",
    "def load_midi_df(\n",
    "    save_path:str ='midi_df.parquet',\n",
    "    dataset_path: str = '../datasets/midi_dataset',\n",
    "    force_reload: bool = False\n",
    ") -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Loads a dataframe with all available MIDI files in a folder\n",
    "    and all \n",
    "    \"\"\"\n",
    "    if os.path.isfile(save_path) and not force_reload:\n",
    "        print(f'Load dataframe from {save_path}')\n",
    "        return pd.read_parquet(save_path)\n",
    "    \n",
    "    print(f'Load data to new dataframe')\n",
    "    midi_files = []\n",
    "    for ext in ['mid', 'MID', 'Mid', 'midi', 'MIDi']:\n",
    "        # maybe os.walk would be better?\n",
    "        midi_files += glob.glob(f'{dataset_path}/**/*.{ext}', recursive=True)\n",
    "    print(f'Found {len(midi_files)} midi files in folder {dataset_path}')\n",
    "    \n",
    "    midi_df: pd.DataFrame = pd.DataFrame({'file_path': midi_files})\n",
    "    midi_df = midi_df.swifter.apply(parse_midi, axis=1)\n",
    "    \n",
    "    midi_df.to_parquet(save_path)\n",
    "    print(f'Saved dataframe in {save_path}')\n",
    "    \n",
    "    return midi_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Load dataframe from midi_df.parquet\n"
     ]
    }
   ],
   "source": [
    "midi_df = load_midi_df()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets examine the extracted metadata of those files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_24_0.png"
      },
      "image/png": {
       "height": 333,
       "width": 876
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df.midi_error.value_counts().plot.bar(logy=True)\n",
    "plt.title(\"Number of faulty MIDI files\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_25_0.png"
      },
      "image/png": {
       "height": 333,
       "width": 890
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df.drums.value_counts().plot.bar()\n",
    "plt.title(\"Number of MIDI files that contain drums\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_26_0.png"
      },
      "image/png": {
       "height": 302,
       "width": 905
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df.end_time.plot.box(vert=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that the `end_time` has some extreme values that are probably wrong - lets inspect those examples closer to see if we can see a pattern."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beat_start</th>\n",
       "      <th>drums</th>\n",
       "      <th>end_time</th>\n",
       "      <th>file_path</th>\n",
       "      <th>instrument_names</th>\n",
       "      <th>midi_error</th>\n",
       "      <th>num_time_signature_changes</th>\n",
       "      <th>resolution</th>\n",
       "      <th>tempo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18490</th>\n",
       "      <td>3.044301</td>\n",
       "      <td>True</td>\n",
       "      <td>14337.531639</td>\n",
       "      <td>../datasets/midi_dataset/O/O/O-Little-Town-Of-...</td>\n",
       "      <td>[, , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>190.305001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28128</th>\n",
       "      <td>1.200000</td>\n",
       "      <td>True</td>\n",
       "      <td>8076.648605</td>\n",
       "      <td>../datasets/midi_dataset/D/D/DION.Move any mou...</td>\n",
       "      <td>[Room2/Chorus3, Room2/Chorus3, Room2/Chorus3, ...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>231.740783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4909</th>\n",
       "      <td>1.999998</td>\n",
       "      <td>True</td>\n",
       "      <td>6100.739733</td>\n",
       "      <td>../datasets/midi_dataset/G/G/Give a Little Bea...</td>\n",
       "      <td>[temp piano, new piano, , sax solo part 1, sax...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>174.986064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4581</th>\n",
       "      <td>1.200000</td>\n",
       "      <td>False</td>\n",
       "      <td>4159.858340</td>\n",
       "      <td>../datasets/midi_dataset/G/G/GoldbergVariation...</td>\n",
       "      <td>[Solo Harpsichord with 2 Manuals, ------------...</td>\n",
       "      <td>False</td>\n",
       "      <td>28.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>194.206702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22934</th>\n",
       "      <td>5.641020</td>\n",
       "      <td>True</td>\n",
       "      <td>3721.089187</td>\n",
       "      <td>../datasets/midi_dataset/J/J/Jean-Michel-Jarre...</td>\n",
       "      <td>[SYNTH 1, SYNTH 1, SYNTH 1, SYNTH 2, SYNTH 2, ...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>195.528695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34903</th>\n",
       "      <td>0.750000</td>\n",
       "      <td>True</td>\n",
       "      <td>3011.975000</td>\n",
       "      <td>../datasets/midi_dataset/L/L/LED ZEPPELIN.Than...</td>\n",
       "      <td>[acoustic embellishment, main acoustic, hammon...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>161.616162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34998</th>\n",
       "      <td>0.750000</td>\n",
       "      <td>True</td>\n",
       "      <td>3011.975000</td>\n",
       "      <td>../datasets/midi_dataset/L/L/Led_Zeppelin_Than...</td>\n",
       "      <td>[acoustic embellishment, main acoustic, hammon...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>161.616162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6898</th>\n",
       "      <td>5.871094</td>\n",
       "      <td>False</td>\n",
       "      <td>2812.520833</td>\n",
       "      <td>../datasets/midi_dataset/T/T/TILLOTSON.11 Pian...</td>\n",
       "      <td>[PIANO]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>204.285192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11505</th>\n",
       "      <td>3.505880</td>\n",
       "      <td>False</td>\n",
       "      <td>2762.016084</td>\n",
       "      <td>../datasets/midi_dataset/S/S/Super Robot Taise...</td>\n",
       "      <td>[Marimba, Acoustic Guitar, Piano, Violin, Bass...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>232.714309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10375</th>\n",
       "      <td>3.505880</td>\n",
       "      <td>False</td>\n",
       "      <td>2762.016084</td>\n",
       "      <td>../datasets/midi_dataset/S/S/Super Robot Taise...</td>\n",
       "      <td>[Marimba, Acoustic Guitar, Piano, Violin, Bass...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>232.544595</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       beat_start  drums      end_time  \\\n",
       "18490    3.044301   True  14337.531639   \n",
       "28128    1.200000   True   8076.648605   \n",
       "4909     1.999998   True   6100.739733   \n",
       "4581     1.200000  False   4159.858340   \n",
       "22934    5.641020   True   3721.089187   \n",
       "34903    0.750000   True   3011.975000   \n",
       "34998    0.750000   True   3011.975000   \n",
       "6898     5.871094  False   2812.520833   \n",
       "11505    3.505880  False   2762.016084   \n",
       "10375    3.505880  False   2762.016084   \n",
       "\n",
       "                                               file_path  \\\n",
       "18490  ../datasets/midi_dataset/O/O/O-Little-Town-Of-...   \n",
       "28128  ../datasets/midi_dataset/D/D/DION.Move any mou...   \n",
       "4909   ../datasets/midi_dataset/G/G/Give a Little Bea...   \n",
       "4581   ../datasets/midi_dataset/G/G/GoldbergVariation...   \n",
       "22934  ../datasets/midi_dataset/J/J/Jean-Michel-Jarre...   \n",
       "34903  ../datasets/midi_dataset/L/L/LED ZEPPELIN.Than...   \n",
       "34998  ../datasets/midi_dataset/L/L/Led_Zeppelin_Than...   \n",
       "6898   ../datasets/midi_dataset/T/T/TILLOTSON.11 Pian...   \n",
       "11505  ../datasets/midi_dataset/S/S/Super Robot Taise...   \n",
       "10375  ../datasets/midi_dataset/S/S/Super Robot Taise...   \n",
       "\n",
       "                                        instrument_names  midi_error  \\\n",
       "18490                                   [, , , , , , , ]       False   \n",
       "28128  [Room2/Chorus3, Room2/Chorus3, Room2/Chorus3, ...       False   \n",
       "4909   [temp piano, new piano, , sax solo part 1, sax...       False   \n",
       "4581   [Solo Harpsichord with 2 Manuals, ------------...       False   \n",
       "22934  [SYNTH 1, SYNTH 1, SYNTH 1, SYNTH 2, SYNTH 2, ...       False   \n",
       "34903  [acoustic embellishment, main acoustic, hammon...       False   \n",
       "34998  [acoustic embellishment, main acoustic, hammon...       False   \n",
       "6898                                             [PIANO]       False   \n",
       "11505  [Marimba, Acoustic Guitar, Piano, Violin, Bass...       False   \n",
       "10375  [Marimba, Acoustic Guitar, Piano, Violin, Bass...       False   \n",
       "\n",
       "       num_time_signature_changes  resolution       tempo  \n",
       "18490                         1.0       120.0  190.305001  \n",
       "28128                         1.0       120.0  231.740783  \n",
       "4909                          1.0       480.0  174.986064  \n",
       "4581                         28.0       480.0  194.206702  \n",
       "22934                         1.0       384.0  195.528695  \n",
       "34903                         1.0       120.0  161.616162  \n",
       "34998                         1.0       120.0  161.616162  \n",
       "6898                          1.0       384.0  204.285192  \n",
       "11505                         1.0      1024.0  232.714309  \n",
       "10375                         1.0      1024.0  232.544595  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "midi_df.sort_values('end_time', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Regarding this it seems we should filter out those really long pieces as those are most probably wrong files.\n",
    "\n",
    "Those errors could be caused by our parsing or by the MIDI files itself - but as we have a big enough corpora it is justifiable by not including those outliers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_30_0.png"
      },
      "image/png": {
       "height": 302,
       "width": 909
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df.beat_start.plot.box(vert=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`beat_start` looks ok, although we also should include some filtering here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_32_0.png"
      },
      "image/png": {
       "height": 302,
       "width": 890
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df.tempo.plot.box(vert=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is interesting to see that 95% of our examples are in the 200 bpm range - maybe they were transcribed in half time or we have a skewed dataset towards fast music which would be an interesting exploration what kind of music gets transcribed to MIDI files.\n",
    "\n",
    "We need to inspect this further as drumming is closely related to the tempo of a song and we do not want to interpret the massive amount of data in a wrong way.\n",
    "\n",
    "It is important to have an understanding and feeling for the data.\n",
    "We have an expectation of our data which can help us to see if the data makes sense and if we parsed it correctly but can also always be problematic because we project certain expectations on an projection and simplification of our data.\n",
    "\n",
    "**TODO** Flesh this out"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_34_0.png"
      },
      "image/png": {
       "height": 302,
       "width": 908
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df.resolution.plot.box(vert=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Resolution corresponds to the [PPQN](https://en.wikipedia.org/wiki/Pulses_per_quarter_note) of the MIDI file.\n",
    "Everything above 1000 should be suspicious, so lets take a look at those examples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beat_start</th>\n",
       "      <th>drums</th>\n",
       "      <th>end_time</th>\n",
       "      <th>file_path</th>\n",
       "      <th>instrument_names</th>\n",
       "      <th>midi_error</th>\n",
       "      <th>num_time_signature_changes</th>\n",
       "      <th>resolution</th>\n",
       "      <th>tempo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32259</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>False</td>\n",
       "      <td>135.368840</td>\n",
       "      <td>../datasets/midi_dataset/B/B/beethovenalladanz...</td>\n",
       "      <td>[, , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>239.221606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22942</th>\n",
       "      <td>3.628112</td>\n",
       "      <td>False</td>\n",
       "      <td>14.512448</td>\n",
       "      <td>../datasets/midi_dataset/J/J/Josh_Gallahan_-_1...</td>\n",
       "      <td>[Combinator 1, Thor 2]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>185.220302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18750</th>\n",
       "      <td>2.482758</td>\n",
       "      <td>False</td>\n",
       "      <td>6.310343</td>\n",
       "      <td>../datasets/midi_dataset/O/O/Overload_-_The_An...</td>\n",
       "      <td>[]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>257.777842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3788</th>\n",
       "      <td>1.935483</td>\n",
       "      <td>False</td>\n",
       "      <td>20.403217</td>\n",
       "      <td>../datasets/midi_dataset/N/N/Nore_-_LEHHHGOOO_...</td>\n",
       "      <td>[Redrum 1, Phastday MOD, RAW, Combinator 1]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>186.000084</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11202</th>\n",
       "      <td>11.691164</td>\n",
       "      <td>False</td>\n",
       "      <td>112.941056</td>\n",
       "      <td>../datasets/midi_dataset/S/S/Spaceline_-_sumer...</td>\n",
       "      <td>[virus sin, virus gytare]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>222.545692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1149</th>\n",
       "      <td>2.065215</td>\n",
       "      <td>False</td>\n",
       "      <td>27.608657</td>\n",
       "      <td>../datasets/midi_dataset/R/R/Rah_-_Wave__Ambia...</td>\n",
       "      <td>[Main Melody]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>249.290672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28944</th>\n",
       "      <td>1.241379</td>\n",
       "      <td>False</td>\n",
       "      <td>13.241376</td>\n",
       "      <td>../datasets/midi_dataset/D/D/dj_tibby__eternit...</td>\n",
       "      <td>[SubTractor 1]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>290.000073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26966</th>\n",
       "      <td>2.142855</td>\n",
       "      <td>False</td>\n",
       "      <td>13.553558</td>\n",
       "      <td>../datasets/midi_dataset/D/D/Dj_Cyglas_-_Brain...</td>\n",
       "      <td>[Combinator 1]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>280.000280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14143</th>\n",
       "      <td>0.845070</td>\n",
       "      <td>False</td>\n",
       "      <td>13.516719</td>\n",
       "      <td>../datasets/midi_dataset/A/A/alphazone__rockin...</td>\n",
       "      <td>[SYNTH, BASS]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>284.000142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14129</th>\n",
       "      <td>0.206897</td>\n",
       "      <td>False</td>\n",
       "      <td>26.379304</td>\n",
       "      <td>../datasets/midi_dataset/A/A/andy_ling__fixati...</td>\n",
       "      <td>[SubTractor 1, SubTractor 2]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>255.513577</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       beat_start  drums    end_time  \\\n",
       "32259    2.000000  False  135.368840   \n",
       "22942    3.628112  False   14.512448   \n",
       "18750    2.482758  False    6.310343   \n",
       "3788     1.935483  False   20.403217   \n",
       "11202   11.691164  False  112.941056   \n",
       "1149     2.065215  False   27.608657   \n",
       "28944    1.241379  False   13.241376   \n",
       "26966    2.142855  False   13.553558   \n",
       "14143    0.845070  False   13.516719   \n",
       "14129    0.206897  False   26.379304   \n",
       "\n",
       "                                               file_path  \\\n",
       "32259  ../datasets/midi_dataset/B/B/beethovenalladanz...   \n",
       "22942  ../datasets/midi_dataset/J/J/Josh_Gallahan_-_1...   \n",
       "18750  ../datasets/midi_dataset/O/O/Overload_-_The_An...   \n",
       "3788   ../datasets/midi_dataset/N/N/Nore_-_LEHHHGOOO_...   \n",
       "11202  ../datasets/midi_dataset/S/S/Spaceline_-_sumer...   \n",
       "1149   ../datasets/midi_dataset/R/R/Rah_-_Wave__Ambia...   \n",
       "28944  ../datasets/midi_dataset/D/D/dj_tibby__eternit...   \n",
       "26966  ../datasets/midi_dataset/D/D/Dj_Cyglas_-_Brain...   \n",
       "14143  ../datasets/midi_dataset/A/A/alphazone__rockin...   \n",
       "14129  ../datasets/midi_dataset/A/A/andy_ling__fixati...   \n",
       "\n",
       "                                  instrument_names  midi_error  \\\n",
       "32259                                     [, , , ]       False   \n",
       "22942                       [Combinator 1, Thor 2]       False   \n",
       "18750                                           []       False   \n",
       "3788   [Redrum 1, Phastday MOD, RAW, Combinator 1]       False   \n",
       "11202                    [virus sin, virus gytare]       False   \n",
       "1149                                 [Main Melody]       False   \n",
       "28944                               [SubTractor 1]       False   \n",
       "26966                               [Combinator 1]       False   \n",
       "14143                                [SYNTH, BASS]       False   \n",
       "14129                 [SubTractor 1, SubTractor 2]       False   \n",
       "\n",
       "       num_time_signature_changes  resolution       tempo  \n",
       "32259                         1.0     25000.0  239.221606  \n",
       "22942                         1.0     15360.0  185.220302  \n",
       "18750                         1.0     15360.0  257.777842  \n",
       "3788                          1.0     15360.0  186.000084  \n",
       "11202                         1.0     15360.0  222.545692  \n",
       "1149                          1.0     15360.0  249.290672  \n",
       "28944                         1.0     15360.0  290.000073  \n",
       "26966                         1.0     15360.0  280.000280  \n",
       "14143                         1.0     15360.0  284.000142  \n",
       "14129                         1.0     15360.0  255.513577  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "midi_df.sort_values('resolution', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_37_0.png"
      },
      "image/png": {
       "height": 304,
       "width": 1008
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "midi_df['num_time_signature_changes'].plot.box(vert=False, logx=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beat_start</th>\n",
       "      <th>drums</th>\n",
       "      <th>end_time</th>\n",
       "      <th>file_path</th>\n",
       "      <th>instrument_names</th>\n",
       "      <th>midi_error</th>\n",
       "      <th>num_time_signature_changes</th>\n",
       "      <th>resolution</th>\n",
       "      <th>tempo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17123</th>\n",
       "      <td>7.400000</td>\n",
       "      <td>True</td>\n",
       "      <td>1548.530277</td>\n",
       "      <td>../datasets/midi_dataset/F/F/FortunaImperatrix...</td>\n",
       "      <td>[- Carmina Burana (1936), , Sequenced by, Rash...</td>\n",
       "      <td>False</td>\n",
       "      <td>223.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>215.422062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17808</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>True</td>\n",
       "      <td>1585.133592</td>\n",
       "      <td>../datasets/midi_dataset/F/F/Fortuna-Imperatri...</td>\n",
       "      <td>[STRINGS, PIZZICATO, STRINGS, FLUTE, FLUTE, OB...</td>\n",
       "      <td>False</td>\n",
       "      <td>223.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>216.869880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7750</th>\n",
       "      <td>0.416666</td>\n",
       "      <td>False</td>\n",
       "      <td>1472.191436</td>\n",
       "      <td>../datasets/midi_dataset/T/T/The-9th-Symphony.mid</td>\n",
       "      <td>[]</td>\n",
       "      <td>False</td>\n",
       "      <td>197.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>228.889697</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25871</th>\n",
       "      <td>4.625717</td>\n",
       "      <td>False</td>\n",
       "      <td>381.390677</td>\n",
       "      <td>../datasets/midi_dataset/C/C/Chopin_Polonaise_...</td>\n",
       "      <td>[]</td>\n",
       "      <td>False</td>\n",
       "      <td>184.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>192.891986</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40123</th>\n",
       "      <td>3.607587</td>\n",
       "      <td>True</td>\n",
       "      <td>547.593732</td>\n",
       "      <td>../datasets/midi_dataset/M/M/METHENY.The first...</td>\n",
       "      <td>[The First Circle, The First Circle, The First...</td>\n",
       "      <td>False</td>\n",
       "      <td>173.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>168.527028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31675</th>\n",
       "      <td>0.900000</td>\n",
       "      <td>True</td>\n",
       "      <td>195.862500</td>\n",
       "      <td>../datasets/midi_dataset/B/B/BattleStarGalacti...</td>\n",
       "      <td>[Piccolo, SoundTrack, SynBrass1, Trombone, Dee...</td>\n",
       "      <td>False</td>\n",
       "      <td>165.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>195.342528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10428</th>\n",
       "      <td>4.500000</td>\n",
       "      <td>True</td>\n",
       "      <td>175.500000</td>\n",
       "      <td>../datasets/midi_dataset/S/S/sheryl_crow-stron...</td>\n",
       "      <td>[Guitar 1, Guitar 2, Guitar 3, Guitar 3 (Bend)...</td>\n",
       "      <td>False</td>\n",
       "      <td>154.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>161.471748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30576</th>\n",
       "      <td>1.588234</td>\n",
       "      <td>False</td>\n",
       "      <td>211.764600</td>\n",
       "      <td>../datasets/midi_dataset/E/E/elitesyncopations...</td>\n",
       "      <td>[Instrument 1, Instrument2, Instrument3]</td>\n",
       "      <td>False</td>\n",
       "      <td>151.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>168.053519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2494</th>\n",
       "      <td>2.857140</td>\n",
       "      <td>False</td>\n",
       "      <td>277.472373</td>\n",
       "      <td>../datasets/midi_dataset/I/I/II-glorification_...</td>\n",
       "      <td>[Ch  1]</td>\n",
       "      <td>False</td>\n",
       "      <td>150.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>239.161377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15136</th>\n",
       "      <td>4.067256</td>\n",
       "      <td>False</td>\n",
       "      <td>193.872536</td>\n",
       "      <td>../datasets/midi_dataset/A/A/Aladdin(PrinceAli...</td>\n",
       "      <td>[BrassSection   Arranged by..., SynthVoice  .....</td>\n",
       "      <td>False</td>\n",
       "      <td>144.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>170.708093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36753</th>\n",
       "      <td>7.052083</td>\n",
       "      <td>True</td>\n",
       "      <td>259.000000</td>\n",
       "      <td>../datasets/midi_dataset/P/P/P.FLOYD.Money K.mid</td>\n",
       "      <td>[, , , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>137.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>174.734561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33351</th>\n",
       "      <td>2.250000</td>\n",
       "      <td>True</td>\n",
       "      <td>520.500000</td>\n",
       "      <td>../datasets/midi_dataset/B/B/Burzum-Jesus Tod ...</td>\n",
       "      <td>[Guitar 1, Guitar 2, Drums]</td>\n",
       "      <td>False</td>\n",
       "      <td>137.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>160.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12305</th>\n",
       "      <td>0.789473</td>\n",
       "      <td>False</td>\n",
       "      <td>440.280071</td>\n",
       "      <td>../datasets/midi_dataset/S/S/somewhereintime.m...</td>\n",
       "      <td>[Contrabass, Harp, Clarinet, Flute, Slo Vln, V...</td>\n",
       "      <td>False</td>\n",
       "      <td>136.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>125.156665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37048</th>\n",
       "      <td>7.118636</td>\n",
       "      <td>True</td>\n",
       "      <td>386.126082</td>\n",
       "      <td>../datasets/midi_dataset/P/P/pink_floyd-money.mid</td>\n",
       "      <td>[, , , , , , , , , , , , , , , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>133.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>201.178534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14228</th>\n",
       "      <td>3.409090</td>\n",
       "      <td>True</td>\n",
       "      <td>1078.835489</td>\n",
       "      <td>../datasets/midi_dataset/A/A/A change of seaso...</td>\n",
       "      <td>[Vocal, Keyboards, Keyboards, Keyboards, Keybo...</td>\n",
       "      <td>False</td>\n",
       "      <td>130.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>216.333673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39234</th>\n",
       "      <td>4.288861</td>\n",
       "      <td>False</td>\n",
       "      <td>1869.334012</td>\n",
       "      <td>../datasets/midi_dataset/W/W/WarioWare Smooth ...</td>\n",
       "      <td>[SmartMusic SoftSynth]</td>\n",
       "      <td>False</td>\n",
       "      <td>121.0</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>212.127846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20582</th>\n",
       "      <td>3.818178</td>\n",
       "      <td>True</td>\n",
       "      <td>473.181345</td>\n",
       "      <td>../datasets/midi_dataset/M/M/Master-Of-The-Pup...</td>\n",
       "      <td>[Voice, Guitar 1, Guitar 2, Guitar 3, Guitar S...</td>\n",
       "      <td>False</td>\n",
       "      <td>119.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>214.649922</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22510</th>\n",
       "      <td>3.818178</td>\n",
       "      <td>True</td>\n",
       "      <td>473.181345</td>\n",
       "      <td>../datasets/midi_dataset/M/M/METALLICA.Master ...</td>\n",
       "      <td>[, , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>119.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>214.649922</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20790</th>\n",
       "      <td>2.205907</td>\n",
       "      <td>True</td>\n",
       "      <td>465.543723</td>\n",
       "      <td>../datasets/midi_dataset/M/M/Master-Of-The-Pup...</td>\n",
       "      <td>[SYN BASS 1, FRETLESS, DISTORTION, OVERDRIVE, ...</td>\n",
       "      <td>False</td>\n",
       "      <td>119.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>222.749016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21199</th>\n",
       "      <td>3.818178</td>\n",
       "      <td>True</td>\n",
       "      <td>473.181345</td>\n",
       "      <td>../datasets/midi_dataset/M/M/Metallica - Maste...</td>\n",
       "      <td>[Vocals (left), Vocals (right), Guitar 1, Guit...</td>\n",
       "      <td>False</td>\n",
       "      <td>119.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>216.377883</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       beat_start  drums     end_time  \\\n",
       "17123    7.400000   True  1548.530277   \n",
       "17808    7.000000   True  1585.133592   \n",
       "7750     0.416666  False  1472.191436   \n",
       "25871    4.625717  False   381.390677   \n",
       "40123    3.607587   True   547.593732   \n",
       "31675    0.900000   True   195.862500   \n",
       "10428    4.500000   True   175.500000   \n",
       "30576    1.588234  False   211.764600   \n",
       "2494     2.857140  False   277.472373   \n",
       "15136    4.067256  False   193.872536   \n",
       "36753    7.052083   True   259.000000   \n",
       "33351    2.250000   True   520.500000   \n",
       "12305    0.789473  False   440.280071   \n",
       "37048    7.118636   True   386.126082   \n",
       "14228    3.409090   True  1078.835489   \n",
       "39234    4.288861  False  1869.334012   \n",
       "20582    3.818178   True   473.181345   \n",
       "22510    3.818178   True   473.181345   \n",
       "20790    2.205907   True   465.543723   \n",
       "21199    3.818178   True   473.181345   \n",
       "\n",
       "                                               file_path  \\\n",
       "17123  ../datasets/midi_dataset/F/F/FortunaImperatrix...   \n",
       "17808  ../datasets/midi_dataset/F/F/Fortuna-Imperatri...   \n",
       "7750   ../datasets/midi_dataset/T/T/The-9th-Symphony.mid   \n",
       "25871  ../datasets/midi_dataset/C/C/Chopin_Polonaise_...   \n",
       "40123  ../datasets/midi_dataset/M/M/METHENY.The first...   \n",
       "31675  ../datasets/midi_dataset/B/B/BattleStarGalacti...   \n",
       "10428  ../datasets/midi_dataset/S/S/sheryl_crow-stron...   \n",
       "30576  ../datasets/midi_dataset/E/E/elitesyncopations...   \n",
       "2494   ../datasets/midi_dataset/I/I/II-glorification_...   \n",
       "15136  ../datasets/midi_dataset/A/A/Aladdin(PrinceAli...   \n",
       "36753   ../datasets/midi_dataset/P/P/P.FLOYD.Money K.mid   \n",
       "33351  ../datasets/midi_dataset/B/B/Burzum-Jesus Tod ...   \n",
       "12305  ../datasets/midi_dataset/S/S/somewhereintime.m...   \n",
       "37048  ../datasets/midi_dataset/P/P/pink_floyd-money.mid   \n",
       "14228  ../datasets/midi_dataset/A/A/A change of seaso...   \n",
       "39234  ../datasets/midi_dataset/W/W/WarioWare Smooth ...   \n",
       "20582  ../datasets/midi_dataset/M/M/Master-Of-The-Pup...   \n",
       "22510  ../datasets/midi_dataset/M/M/METALLICA.Master ...   \n",
       "20790  ../datasets/midi_dataset/M/M/Master-Of-The-Pup...   \n",
       "21199  ../datasets/midi_dataset/M/M/Metallica - Maste...   \n",
       "\n",
       "                                        instrument_names  midi_error  \\\n",
       "17123  [- Carmina Burana (1936), , Sequenced by, Rash...       False   \n",
       "17808  [STRINGS, PIZZICATO, STRINGS, FLUTE, FLUTE, OB...       False   \n",
       "7750                                                  []       False   \n",
       "25871                                                 []       False   \n",
       "40123  [The First Circle, The First Circle, The First...       False   \n",
       "31675  [Piccolo, SoundTrack, SynBrass1, Trombone, Dee...       False   \n",
       "10428  [Guitar 1, Guitar 2, Guitar 3, Guitar 3 (Bend)...       False   \n",
       "30576           [Instrument 1, Instrument2, Instrument3]       False   \n",
       "2494                                             [Ch  1]       False   \n",
       "15136  [BrassSection   Arranged by..., SynthVoice  .....       False   \n",
       "36753                                 [, , , , , , , , ]       False   \n",
       "33351                        [Guitar 1, Guitar 2, Drums]       False   \n",
       "12305  [Contrabass, Harp, Clarinet, Flute, Slo Vln, V...       False   \n",
       "37048         [, , , , , , , , , , , , , , , , , , , , ]       False   \n",
       "14228  [Vocal, Keyboards, Keyboards, Keyboards, Keybo...       False   \n",
       "39234                             [SmartMusic SoftSynth]       False   \n",
       "20582  [Voice, Guitar 1, Guitar 2, Guitar 3, Guitar S...       False   \n",
       "22510                                     [, , , , , , ]       False   \n",
       "20790  [SYN BASS 1, FRETLESS, DISTORTION, OVERDRIVE, ...       False   \n",
       "21199  [Vocals (left), Vocals (right), Guitar 1, Guit...       False   \n",
       "\n",
       "       num_time_signature_changes  resolution       tempo  \n",
       "17123                       223.0       120.0  215.422062  \n",
       "17808                       223.0       384.0  216.869880  \n",
       "7750                        197.0       240.0  228.889697  \n",
       "25871                       184.0      1024.0  192.891986  \n",
       "40123                       173.0        96.0  168.527028  \n",
       "31675                       165.0       240.0  195.342528  \n",
       "10428                       154.0       192.0  161.471748  \n",
       "30576                       151.0      1024.0  168.053519  \n",
       "2494                        150.0       240.0  239.161377  \n",
       "15136                       144.0       240.0  170.708093  \n",
       "36753                       137.0       384.0  174.734561  \n",
       "33351                       137.0       480.0  160.000000  \n",
       "12305                       136.0      1024.0  125.156665  \n",
       "37048                       133.0       240.0  201.178534  \n",
       "14228                       130.0       192.0  216.333673  \n",
       "39234                       121.0      1024.0  212.127846  \n",
       "20582                       119.0       120.0  214.649922  \n",
       "22510                       119.0       120.0  214.649922  \n",
       "20790                       119.0       384.0  222.749016  \n",
       "21199                       119.0       120.0  216.377883  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "midi_df.sort_values('num_time_signature_changes', ascending=False).head(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We observe that some tracks have an excessive amount of time signature changes.\n",
    "Some such as *Money* by *Pink Floyd* can be explained by the $\\frac{7}{4}$ time signature which can also be written as an alternating between $\\frac{3}{4}$ and $\\frac{4}{4}$.\n",
    "To keep things simple for now we should maybe allow only songs without any time signature change."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "filenames": {
       "image/png": "/Users/scheiba/github/musikinformatik_sose2021/docs/_build/jupyter_execute/01_midi_drums/01_midi_drums_40_0.png"
      },
      "image/png": {
       "height": 301,
       "width": 300
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(midi_df.num_time_signature_changes <= 1).value_counts().plot.pie();\n",
    "plt.title('Tracks without time signature changes');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also take a look at the most common instrument names in our dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "              55743\n",
       "Bass           4526\n",
       "Piano          4384\n",
       "Drums          3510\n",
       "DRUMS          3377\n",
       "untitled       2684\n",
       "Strings        1922\n",
       "MELODY         1863\n",
       "Guitar         1827\n",
       "STRINGS        1764\n",
       "A.PIANO 1      1660\n",
       "MIDI out       1484\n",
       "Melody         1406\n",
       "HitBit         1132\n",
       "STEEL GTR      1112\n",
       "MIDI           1029\n",
       "FINGERDBAS      978\n",
       "bass            891\n",
       "-               874\n",
       "ACOU BASS       851\n",
       "Name: instrument_names, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "midi_df.explode('instrument_names').instrument_names.value_counts().head(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Its also good to make some sanity checks on our data.\n",
    "One assumption would be that every file in which we did not detect a drum track also does not contain an instrument with the name *drums*."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_path</th>\n",
       "      <th>beat_start</th>\n",
       "      <th>drums</th>\n",
       "      <th>end_time</th>\n",
       "      <th>instrument_names</th>\n",
       "      <th>midi_error</th>\n",
       "      <th>num_time_signature_changes</th>\n",
       "      <th>resolution</th>\n",
       "      <th>tempo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>../datasets/midi_dataset/A/A/Auf-Hoher-See-(Me...</td>\n",
       "      <td>3.199920</td>\n",
       "      <td>False</td>\n",
       "      <td>132.327247</td>\n",
       "      <td>DRUMS</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>226.453749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>../datasets/midi_dataset/B/B/Bump_-_Im_Rushing...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>838.123047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>181.677419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>../datasets/midi_dataset/B/B/Buy_Now_-_For_Sal...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>26.248047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>160.914286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>../datasets/midi_dataset/C/C/charlie-willnotcr...</td>\n",
       "      <td>12.499995</td>\n",
       "      <td>False</td>\n",
       "      <td>175.564166</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>96.0</td>\n",
       "      <td>144.000058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>../datasets/midi_dataset/D/D/Disney_Themes_-_A...</td>\n",
       "      <td>1.454544</td>\n",
       "      <td>False</td>\n",
       "      <td>145.454400</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>178.505517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>../datasets/midi_dataset/E/E/ENYA.Memory of Tr...</td>\n",
       "      <td>26.250000</td>\n",
       "      <td>False</td>\n",
       "      <td>253.119792</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>191.219512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>../datasets/midi_dataset/E/E/Evermore_-_Its_To...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>26.248047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>193.794393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>../datasets/midi_dataset/F/F/from_a_distance.mid</td>\n",
       "      <td>0.909090</td>\n",
       "      <td>False</td>\n",
       "      <td>284.007707</td>\n",
       "      <td>drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>191.384782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>../datasets/midi_dataset/G/G/GABRIEL.Humdrum.mid</td>\n",
       "      <td>4.038461</td>\n",
       "      <td>False</td>\n",
       "      <td>213.389395</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>208.457171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>../datasets/midi_dataset/G/G/Gran_Turismo_-_Th...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>26.248047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>188.235294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>../datasets/midi_dataset/H/H/HereThereAndEvery...</td>\n",
       "      <td>2.010425</td>\n",
       "      <td>False</td>\n",
       "      <td>153.611880</td>\n",
       "      <td>drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>175.895765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>../datasets/midi_dataset/H/H/Hoxton_Whores_-_F...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>26.248047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>184.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>../datasets/midi_dataset/L/L/Lang-Zal-Hij-Leve...</td>\n",
       "      <td>4.444400</td>\n",
       "      <td>False</td>\n",
       "      <td>26.689548</td>\n",
       "      <td>DRUMS</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>142.028818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>../datasets/midi_dataset/L/L/LullabyOfBroadway...</td>\n",
       "      <td>3.210000</td>\n",
       "      <td>False</td>\n",
       "      <td>155.736667</td>\n",
       "      <td>DRUMS</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>226.014166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>../datasets/midi_dataset/L/L/led_zeppelin-blac...</td>\n",
       "      <td>2.363634</td>\n",
       "      <td>False</td>\n",
       "      <td>267.454278</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>168.113376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>../datasets/midi_dataset/M/M/M.A.N.D.Y. VS Boo...</td>\n",
       "      <td>2.812500</td>\n",
       "      <td>False</td>\n",
       "      <td>7.498047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>210.823529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>../datasets/midi_dataset/N/N/Nine_Inch_Nails_N...</td>\n",
       "      <td>1.348314</td>\n",
       "      <td>False</td>\n",
       "      <td>199.452157</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>182.144758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>../datasets/midi_dataset/N/N/new-rigged-ship.mid</td>\n",
       "      <td>0.185185</td>\n",
       "      <td>False</td>\n",
       "      <td>35.493792</td>\n",
       "      <td>drum</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>162.000162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>../datasets/midi_dataset/R/R/Rent-AnotherDay04...</td>\n",
       "      <td>0.827586</td>\n",
       "      <td>False</td>\n",
       "      <td>268.034416</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>248.055425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>../datasets/midi_dataset/R/R/Royksopp_-_What_E...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>26.248047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>170.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>../datasets/midi_dataset/R/R/rem-loosing_my_re...</td>\n",
       "      <td>2.880000</td>\n",
       "      <td>False</td>\n",
       "      <td>267.602606</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>224.063597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>../datasets/midi_dataset/S/S/Sander_Van_Doorn_...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>False</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>240.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>../datasets/midi_dataset/S/S/Skrillex_-_FirstO...</td>\n",
       "      <td>1.655172</td>\n",
       "      <td>False</td>\n",
       "      <td>13.241376</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15360.0</td>\n",
       "      <td>228.484906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>../datasets/midi_dataset/S/S/SmokeOnTheWater2.mid</td>\n",
       "      <td>5.739129</td>\n",
       "      <td>False</td>\n",
       "      <td>322.543398</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>228.841244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>../datasets/midi_dataset/S/S/Steve_Lawler_-_Th...</td>\n",
       "      <td>0.468750</td>\n",
       "      <td>False</td>\n",
       "      <td>26.248047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>180.705882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>../datasets/midi_dataset/S/S/searching_for_lov...</td>\n",
       "      <td>5.597514</td>\n",
       "      <td>False</td>\n",
       "      <td>201.869019</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>206.218950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>../datasets/midi_dataset/S/S/strollingthruthep...</td>\n",
       "      <td>4.705880</td>\n",
       "      <td>False</td>\n",
       "      <td>117.151902</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>156.268185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>../datasets/midi_dataset/T/T/Terranova__Austin...</td>\n",
       "      <td>0.937500</td>\n",
       "      <td>False</td>\n",
       "      <td>7.498047</td>\n",
       "      <td>Drum</td>\n",
       "      <td>False</td>\n",
       "      <td>2.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>219.428571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>../datasets/midi_dataset/T/T/TheMemoryOfTrees.mid</td>\n",
       "      <td>27.500000</td>\n",
       "      <td>False</td>\n",
       "      <td>253.119792</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>191.219512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>../datasets/midi_dataset/U/U/UnchainedMelody3.mid</td>\n",
       "      <td>11.999988</td>\n",
       "      <td>False</td>\n",
       "      <td>213.553358</td>\n",
       "      <td>drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>218.459582</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>../datasets/midi_dataset/W/W/Wavetraxx_-_Stay(...</td>\n",
       "      <td>25.588208</td>\n",
       "      <td>False</td>\n",
       "      <td>361.872776</td>\n",
       "      <td>drum</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>256.078322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>../datasets/midi_dataset/W/W/WhenAMAnLovesAWom...</td>\n",
       "      <td>4.363636</td>\n",
       "      <td>False</td>\n",
       "      <td>264.409069</td>\n",
       "      <td>Drums</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>167.140954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>../datasets/midi_dataset/W/W/Whiskey-Before-Br...</td>\n",
       "      <td>2.231370</td>\n",
       "      <td>False</td>\n",
       "      <td>142.777340</td>\n",
       "      <td>DRUMS</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>241.847710</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            file_path  beat_start  drums  \\\n",
       "0   ../datasets/midi_dataset/A/A/Auf-Hoher-See-(Me...    3.199920  False   \n",
       "1   ../datasets/midi_dataset/B/B/Bump_-_Im_Rushing...    0.468750  False   \n",
       "2   ../datasets/midi_dataset/B/B/Buy_Now_-_For_Sal...    0.468750  False   \n",
       "3   ../datasets/midi_dataset/C/C/charlie-willnotcr...   12.499995  False   \n",
       "4   ../datasets/midi_dataset/D/D/Disney_Themes_-_A...    1.454544  False   \n",
       "5   ../datasets/midi_dataset/E/E/ENYA.Memory of Tr...   26.250000  False   \n",
       "6   ../datasets/midi_dataset/E/E/Evermore_-_Its_To...    0.468750  False   \n",
       "7    ../datasets/midi_dataset/F/F/from_a_distance.mid    0.909090  False   \n",
       "8    ../datasets/midi_dataset/G/G/GABRIEL.Humdrum.mid    4.038461  False   \n",
       "9   ../datasets/midi_dataset/G/G/Gran_Turismo_-_Th...    0.468750  False   \n",
       "10  ../datasets/midi_dataset/H/H/HereThereAndEvery...    2.010425  False   \n",
       "11  ../datasets/midi_dataset/H/H/Hoxton_Whores_-_F...    0.468750  False   \n",
       "12  ../datasets/midi_dataset/L/L/Lang-Zal-Hij-Leve...    4.444400  False   \n",
       "13  ../datasets/midi_dataset/L/L/LullabyOfBroadway...    3.210000  False   \n",
       "14  ../datasets/midi_dataset/L/L/led_zeppelin-blac...    2.363634  False   \n",
       "15  ../datasets/midi_dataset/M/M/M.A.N.D.Y. VS Boo...    2.812500  False   \n",
       "16  ../datasets/midi_dataset/N/N/Nine_Inch_Nails_N...    1.348314  False   \n",
       "17   ../datasets/midi_dataset/N/N/new-rigged-ship.mid    0.185185  False   \n",
       "18  ../datasets/midi_dataset/R/R/Rent-AnotherDay04...    0.827586  False   \n",
       "19  ../datasets/midi_dataset/R/R/Royksopp_-_What_E...    0.468750  False   \n",
       "20  ../datasets/midi_dataset/R/R/rem-loosing_my_re...    2.880000  False   \n",
       "21  ../datasets/midi_dataset/S/S/Sander_Van_Doorn_...    1.000000  False   \n",
       "22  ../datasets/midi_dataset/S/S/Skrillex_-_FirstO...    1.655172  False   \n",
       "23  ../datasets/midi_dataset/S/S/SmokeOnTheWater2.mid    5.739129  False   \n",
       "24  ../datasets/midi_dataset/S/S/Steve_Lawler_-_Th...    0.468750  False   \n",
       "25  ../datasets/midi_dataset/S/S/searching_for_lov...    5.597514  False   \n",
       "26  ../datasets/midi_dataset/S/S/strollingthruthep...    4.705880  False   \n",
       "27  ../datasets/midi_dataset/T/T/Terranova__Austin...    0.937500  False   \n",
       "28  ../datasets/midi_dataset/T/T/TheMemoryOfTrees.mid   27.500000  False   \n",
       "29  ../datasets/midi_dataset/U/U/UnchainedMelody3.mid   11.999988  False   \n",
       "30  ../datasets/midi_dataset/W/W/Wavetraxx_-_Stay(...   25.588208  False   \n",
       "31  ../datasets/midi_dataset/W/W/WhenAMAnLovesAWom...    4.363636  False   \n",
       "32  ../datasets/midi_dataset/W/W/Whiskey-Before-Br...    2.231370  False   \n",
       "\n",
       "      end_time instrument_names  midi_error  num_time_signature_changes  \\\n",
       "0   132.327247            DRUMS       False                         2.0   \n",
       "1   838.123047             Drum       False                         2.0   \n",
       "2    26.248047             Drum       False                         2.0   \n",
       "3   175.564166             Drum       False                         1.0   \n",
       "4   145.454400            Drums       False                         1.0   \n",
       "5   253.119792            Drums       False                         1.0   \n",
       "6    26.248047             Drum       False                         2.0   \n",
       "7   284.007707            drums       False                         1.0   \n",
       "8   213.389395            Drums       False                         1.0   \n",
       "9    26.248047             Drum       False                         2.0   \n",
       "10  153.611880            drums       False                         1.0   \n",
       "11   26.248047             Drum       False                         2.0   \n",
       "12   26.689548            DRUMS       False                         2.0   \n",
       "13  155.736667            DRUMS       False                         1.0   \n",
       "14  267.454278            Drums       False                         1.0   \n",
       "15    7.498047             Drum       False                         2.0   \n",
       "16  199.452157            Drums       False                         1.0   \n",
       "17   35.493792             drum       False                         1.0   \n",
       "18  268.034416            Drums       False                         1.0   \n",
       "19   26.248047             Drum       False                         2.0   \n",
       "20  267.602606             Drum       False                         1.0   \n",
       "21   16.000000            Drums       False                         1.0   \n",
       "22   13.241376            Drums       False                         1.0   \n",
       "23  322.543398            Drums       False                         1.0   \n",
       "24   26.248047             Drum       False                         2.0   \n",
       "25  201.869019            Drums       False                         1.0   \n",
       "26  117.151902            Drums       False                         1.0   \n",
       "27    7.498047             Drum       False                         2.0   \n",
       "28  253.119792            Drums       False                         1.0   \n",
       "29  213.553358            drums       False                         1.0   \n",
       "30  361.872776             drum       False                         1.0   \n",
       "31  264.409069            Drums       False                         1.0   \n",
       "32  142.777340            DRUMS       False                         1.0   \n",
       "\n",
       "    resolution       tempo  \n",
       "0        384.0  226.453749  \n",
       "1        480.0  181.677419  \n",
       "2        480.0  160.914286  \n",
       "3         96.0  144.000058  \n",
       "4        192.0  178.505517  \n",
       "5        120.0  191.219512  \n",
       "6        480.0  193.794393  \n",
       "7        120.0  191.384782  \n",
       "8        240.0  208.457171  \n",
       "9        480.0  188.235294  \n",
       "10       120.0  175.895765  \n",
       "11       480.0  184.000000  \n",
       "12       384.0  142.028818  \n",
       "13       120.0  226.014166  \n",
       "14       192.0  168.113376  \n",
       "15       480.0  210.823529  \n",
       "16       384.0  182.144758  \n",
       "17       192.0  162.000162  \n",
       "18       192.0  248.055425  \n",
       "19       480.0  170.666667  \n",
       "20       480.0  224.063597  \n",
       "21       480.0  240.000000  \n",
       "22     15360.0  228.484906  \n",
       "23       192.0  228.841244  \n",
       "24       480.0  180.705882  \n",
       "25       192.0  206.218950  \n",
       "26       120.0  156.268185  \n",
       "27       480.0  219.428571  \n",
       "28       240.0  191.219512  \n",
       "29       192.0  218.459582  \n",
       "30       480.0  256.078322  \n",
       "31       192.0  167.140954  \n",
       "32       384.0  241.847710  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "explodeded_df = midi_df.explode('instrument_names')\n",
    "explodeded_df[\n",
    "    (explodeded_df['instrument_names'].str.lower().isin(['drums', 'drum']))&\n",
    "    (explodeded_df['drums'] == False)\n",
    "].groupby('file_path').first().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Listening to those examples reveal that some of them use another instrument than drums for their drums - either by artistic choice or by mistake.\n",
    "As this only applies to 32 files we can live with this error and ignore the files were we did not detect the drum track."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Filter and extract the data\n",
    "\n",
    "After inspecting all availabe files we should filter out some *noisy* files that are either not interesting to us (they lack a drum track) or the parsing of the MIDI files did not work as expected.\n",
    "With the analysis above we can verify borders of data we want to allow.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beat_start</th>\n",
       "      <th>drums</th>\n",
       "      <th>end_time</th>\n",
       "      <th>file_path</th>\n",
       "      <th>instrument_names</th>\n",
       "      <th>midi_error</th>\n",
       "      <th>num_time_signature_changes</th>\n",
       "      <th>resolution</th>\n",
       "      <th>tempo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.771427</td>\n",
       "      <td>True</td>\n",
       "      <td>191.371349</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Feuer_F...</td>\n",
       "      <td>[FEUER FREI, Begin, untitled, untitled, untitl...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>174.319388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.333330</td>\n",
       "      <td>True</td>\n",
       "      <td>263.333070</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Wilder_...</td>\n",
       "      <td>[, , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>144.000144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.582524</td>\n",
       "      <td>True</td>\n",
       "      <td>37.281536</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Strippe...</td>\n",
       "      <td>[Guitar 1, Guitar 1, Bass, Keyboard, Keyboard,...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>206.000096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2.999997</td>\n",
       "      <td>True</td>\n",
       "      <td>241.714044</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Sehnsuc...</td>\n",
       "      <td>[Keyboard, Gitarre, Gitarre, Voice, Voice, Voi...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>276.801683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>True</td>\n",
       "      <td>247.620000</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Das_Mod...</td>\n",
       "      <td>[, , , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>248.904881</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40469</th>\n",
       "      <td>11.314543</td>\n",
       "      <td>True</td>\n",
       "      <td>255.182233</td>\n",
       "      <td>../datasets/midi_dataset/S/S/S.ROGERS BAND.Alz...</td>\n",
       "      <td>[, , , , , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>234.768362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40470</th>\n",
       "      <td>0.930232</td>\n",
       "      <td>True</td>\n",
       "      <td>304.030825</td>\n",
       "      <td>../datasets/midi_dataset/W/W/Wollt ihr das bet...</td>\n",
       "      <td>[Noise1, Noise2, Synth, Drums, Wood, Gtr, Bass...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>257.422650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40472</th>\n",
       "      <td>4.520833</td>\n",
       "      <td>True</td>\n",
       "      <td>142.000000</td>\n",
       "      <td>../datasets/midi_dataset/S/S/standbyyourman.midi</td>\n",
       "      <td>[Piano (Melody), Piano (Melody Doubled), Piano...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>240.335799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40474</th>\n",
       "      <td>7.846146</td>\n",
       "      <td>True</td>\n",
       "      <td>217.845936</td>\n",
       "      <td>../datasets/midi_dataset/M/M/MM-personal jesus...</td>\n",
       "      <td>[, , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>194.855643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40475</th>\n",
       "      <td>5.806455</td>\n",
       "      <td>True</td>\n",
       "      <td>183.871075</td>\n",
       "      <td>../datasets/midi_dataset/L/L/littlebrownjug.midi</td>\n",
       "      <td>[Jazz Kit, Jazz Bass, Piano, Alto Sax 1, Alto ...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>239.287342</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21316 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       beat_start drums    end_time  \\\n",
       "0        3.771427  True  191.371349   \n",
       "1        3.333330  True  263.333070   \n",
       "2        0.582524  True   37.281536   \n",
       "5        2.999997  True  241.714044   \n",
       "6        0.480000  True  247.620000   \n",
       "...           ...   ...         ...   \n",
       "40469   11.314543  True  255.182233   \n",
       "40470    0.930232  True  304.030825   \n",
       "40472    4.520833  True  142.000000   \n",
       "40474    7.846146  True  217.845936   \n",
       "40475    5.806455  True  183.871075   \n",
       "\n",
       "                                               file_path  \\\n",
       "0      ../datasets/midi_dataset/R/Rammstein - Feuer_F...   \n",
       "1      ../datasets/midi_dataset/R/Rammstein - Wilder_...   \n",
       "2      ../datasets/midi_dataset/R/Rammstein - Strippe...   \n",
       "5      ../datasets/midi_dataset/R/Rammstein - Sehnsuc...   \n",
       "6      ../datasets/midi_dataset/R/Rammstein - Das_Mod...   \n",
       "...                                                  ...   \n",
       "40469  ../datasets/midi_dataset/S/S/S.ROGERS BAND.Alz...   \n",
       "40470  ../datasets/midi_dataset/W/W/Wollt ihr das bet...   \n",
       "40472   ../datasets/midi_dataset/S/S/standbyyourman.midi   \n",
       "40474  ../datasets/midi_dataset/M/M/MM-personal jesus...   \n",
       "40475   ../datasets/midi_dataset/L/L/littlebrownjug.midi   \n",
       "\n",
       "                                        instrument_names  midi_error  \\\n",
       "0      [FEUER FREI, Begin, untitled, untitled, untitl...       False   \n",
       "1                                           [, , , , , ]       False   \n",
       "2      [Guitar 1, Guitar 1, Bass, Keyboard, Keyboard,...       False   \n",
       "5      [Keyboard, Gitarre, Gitarre, Voice, Voice, Voi...       False   \n",
       "6                                     [, , , , , , , , ]       False   \n",
       "...                                                  ...         ...   \n",
       "40469                             [, , , , , , , , , , ]       False   \n",
       "40470  [Noise1, Noise2, Synth, Drums, Wood, Gtr, Bass...       False   \n",
       "40472  [Piano (Melody), Piano (Melody Doubled), Piano...       False   \n",
       "40474                                     [, , , , , , ]       False   \n",
       "40475  [Jazz Kit, Jazz Bass, Piano, Alto Sax 1, Alto ...       False   \n",
       "\n",
       "       num_time_signature_changes  resolution       tempo  \n",
       "0                             1.0       384.0  174.319388  \n",
       "1                             1.0       384.0  144.000144  \n",
       "2                             1.0       480.0  206.000096  \n",
       "5                             1.0       480.0  276.801683  \n",
       "6                             1.0       480.0  248.904881  \n",
       "...                           ...         ...         ...  \n",
       "40469                         1.0       192.0  234.768362  \n",
       "40470                         1.0       384.0  257.422650  \n",
       "40472                         1.0       120.0  240.335799  \n",
       "40474                         1.0       120.0  194.855643  \n",
       "40475                         1.0       480.0  239.287342  \n",
       "\n",
       "[21316 rows x 9 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filtered_midi_df = midi_df[\n",
    "    (midi_df.drums == True)\n",
    "    & (midi_df.midi_error == False)\n",
    "    & (midi_df.end_time.between(30, 800))\n",
    "    & (midi_df.num_time_signature_changes<=1)\n",
    "    & (midi_df.beat_start <= 20)\n",
    "    & (midi_df.tempo <= 500)\n",
    "]\n",
    "filtered_midi_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now filtered half of our available examples by just looking at the metadata of the MIDI files.\n",
    "The next step is to extract the drum track of each MIDI filtered MIDI file and save the extracted MIDI file so we can analyse the patterns in of those drum patterns in the next step.\n",
    "\n",
    "As this part is also computational quite heavy we will again use caching here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "def extract_drums(row, extract_path:str = '../datasets/midi_dataset_drums_extracted'):\n",
    "    os.makedirs(extract_path, exist_ok=True)\n",
    "    file_path = row['file_path']\n",
    "    \n",
    "    extracted_path = os.path.join(\n",
    "        extract_path,\n",
    "        f'{os.path.splitext(file_path.split(os.sep)[-1])[0]}.mid'\n",
    "    )\n",
    "    \n",
    "    if os.path.isfile(extract_path):\n",
    "        row['extracted_file_path'] = extracted_path\n",
    "    else:\n",
    "        try:\n",
    "            sound = pm.PrettyMIDI(file_path)\n",
    "            sound.instruments = [i for i in sound.instruments if i.is_drum]\n",
    "            sound.write(extracted_path)\n",
    "            row['extracted_file_path'] = extracted_path\n",
    "        except Exception as e:\n",
    "            print(f'Failed to extract {file_path}: {e}')\n",
    "            row['fail_extract'] = True\n",
    "    return row\n",
    "\n",
    "def load_extracted_drums_df(\n",
    "    filtered_midi_df: pd.DataFrame,\n",
    "    save_path:str ='extracted_drums_df.parquet',\n",
    "    force_reload: bool = False\n",
    ") -> pd.DataFrame:\n",
    "    if os.path.isfile(save_path) and not force_reload:\n",
    "        print(f'Load dataframe from {save_path}')\n",
    "        df = pd.read_parquet(save_path)\n",
    "        if not(len(df)==len(filtered_midi_df)):\n",
    "            print(f'Loaded dataframe does not match filtered - consider rebuild of cache')\n",
    "        return df\n",
    "    \n",
    "    df = filtered_midi_df.swifter.apply(extract_drums, axis=1)\n",
    "    df.to_parquet(save_path)\n",
    "    print(f'Saved dataframe in {save_path}')\n",
    "    \n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Load dataframe from extracted_drums_df.parquet\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>beat_start</th>\n",
       "      <th>drums</th>\n",
       "      <th>end_time</th>\n",
       "      <th>file_path</th>\n",
       "      <th>instrument_names</th>\n",
       "      <th>midi_error</th>\n",
       "      <th>num_time_signature_changes</th>\n",
       "      <th>resolution</th>\n",
       "      <th>tempo</th>\n",
       "      <th>extracted_file_path</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.771427</td>\n",
       "      <td>True</td>\n",
       "      <td>191.371349</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Feuer_F...</td>\n",
       "      <td>[FEUER FREI, Begin, untitled, untitled, untitl...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>174.319388</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/Ramms...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.333330</td>\n",
       "      <td>True</td>\n",
       "      <td>263.333070</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Wilder_...</td>\n",
       "      <td>[, , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>144.000144</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/Ramms...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.582524</td>\n",
       "      <td>True</td>\n",
       "      <td>37.281536</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Strippe...</td>\n",
       "      <td>[Guitar 1, Guitar 1, Bass, Keyboard, Keyboard,...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>206.000096</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/Ramms...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2.999997</td>\n",
       "      <td>True</td>\n",
       "      <td>241.714044</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Sehnsuc...</td>\n",
       "      <td>[Keyboard, Gitarre, Gitarre, Voice, Voice, Voi...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>276.801683</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/Ramms...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.480000</td>\n",
       "      <td>True</td>\n",
       "      <td>247.620000</td>\n",
       "      <td>../datasets/midi_dataset/R/Rammstein - Das_Mod...</td>\n",
       "      <td>[, , , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>248.904881</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/Ramms...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40469</th>\n",
       "      <td>11.314543</td>\n",
       "      <td>True</td>\n",
       "      <td>255.182233</td>\n",
       "      <td>../datasets/midi_dataset/S/S/S.ROGERS BAND.Alz...</td>\n",
       "      <td>[, , , , , , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>192.0</td>\n",
       "      <td>234.768362</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/S.ROG...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40470</th>\n",
       "      <td>0.930232</td>\n",
       "      <td>True</td>\n",
       "      <td>304.030825</td>\n",
       "      <td>../datasets/midi_dataset/W/W/Wollt ihr das bet...</td>\n",
       "      <td>[Noise1, Noise2, Synth, Drums, Wood, Gtr, Bass...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>384.0</td>\n",
       "      <td>257.422650</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/Wollt...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40472</th>\n",
       "      <td>4.520833</td>\n",
       "      <td>True</td>\n",
       "      <td>142.000000</td>\n",
       "      <td>../datasets/midi_dataset/S/S/standbyyourman.midi</td>\n",
       "      <td>[Piano (Melody), Piano (Melody Doubled), Piano...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>240.335799</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/stand...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40474</th>\n",
       "      <td>7.846146</td>\n",
       "      <td>True</td>\n",
       "      <td>217.845936</td>\n",
       "      <td>../datasets/midi_dataset/M/M/MM-personal jesus...</td>\n",
       "      <td>[, , , , , , ]</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>194.855643</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/MM-pe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40475</th>\n",
       "      <td>5.806455</td>\n",
       "      <td>True</td>\n",
       "      <td>183.871075</td>\n",
       "      <td>../datasets/midi_dataset/L/L/littlebrownjug.midi</td>\n",
       "      <td>[Jazz Kit, Jazz Bass, Piano, Alto Sax 1, Alto ...</td>\n",
       "      <td>False</td>\n",
       "      <td>1.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>239.287342</td>\n",
       "      <td>../datasets/midi_dataset_drums_extracted/littl...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>21316 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       beat_start  drums    end_time  \\\n",
       "0        3.771427   True  191.371349   \n",
       "1        3.333330   True  263.333070   \n",
       "2        0.582524   True   37.281536   \n",
       "5        2.999997   True  241.714044   \n",
       "6        0.480000   True  247.620000   \n",
       "...           ...    ...         ...   \n",
       "40469   11.314543   True  255.182233   \n",
       "40470    0.930232   True  304.030825   \n",
       "40472    4.520833   True  142.000000   \n",
       "40474    7.846146   True  217.845936   \n",
       "40475    5.806455   True  183.871075   \n",
       "\n",
       "                                               file_path  \\\n",
       "0      ../datasets/midi_dataset/R/Rammstein - Feuer_F...   \n",
       "1      ../datasets/midi_dataset/R/Rammstein - Wilder_...   \n",
       "2      ../datasets/midi_dataset/R/Rammstein - Strippe...   \n",
       "5      ../datasets/midi_dataset/R/Rammstein - Sehnsuc...   \n",
       "6      ../datasets/midi_dataset/R/Rammstein - Das_Mod...   \n",
       "...                                                  ...   \n",
       "40469  ../datasets/midi_dataset/S/S/S.ROGERS BAND.Alz...   \n",
       "40470  ../datasets/midi_dataset/W/W/Wollt ihr das bet...   \n",
       "40472   ../datasets/midi_dataset/S/S/standbyyourman.midi   \n",
       "40474  ../datasets/midi_dataset/M/M/MM-personal jesus...   \n",
       "40475   ../datasets/midi_dataset/L/L/littlebrownjug.midi   \n",
       "\n",
       "                                        instrument_names  midi_error  \\\n",
       "0      [FEUER FREI, Begin, untitled, untitled, untitl...       False   \n",
       "1                                           [, , , , , ]       False   \n",
       "2      [Guitar 1, Guitar 1, Bass, Keyboard, Keyboard,...       False   \n",
       "5      [Keyboard, Gitarre, Gitarre, Voice, Voice, Voi...       False   \n",
       "6                                     [, , , , , , , , ]       False   \n",
       "...                                                  ...         ...   \n",
       "40469                             [, , , , , , , , , , ]       False   \n",
       "40470  [Noise1, Noise2, Synth, Drums, Wood, Gtr, Bass...       False   \n",
       "40472  [Piano (Melody), Piano (Melody Doubled), Piano...       False   \n",
       "40474                                     [, , , , , , ]       False   \n",
       "40475  [Jazz Kit, Jazz Bass, Piano, Alto Sax 1, Alto ...       False   \n",
       "\n",
       "       num_time_signature_changes  resolution       tempo  \\\n",
       "0                             1.0       384.0  174.319388   \n",
       "1                             1.0       384.0  144.000144   \n",
       "2                             1.0       480.0  206.000096   \n",
       "5                             1.0       480.0  276.801683   \n",
       "6                             1.0       480.0  248.904881   \n",
       "...                           ...         ...         ...   \n",
       "40469                         1.0       192.0  234.768362   \n",
       "40470                         1.0       384.0  257.422650   \n",
       "40472                         1.0       120.0  240.335799   \n",
       "40474                         1.0       120.0  194.855643   \n",
       "40475                         1.0       480.0  239.287342   \n",
       "\n",
       "                                     extracted_file_path  \n",
       "0      ../datasets/midi_dataset_drums_extracted/Ramms...  \n",
       "1      ../datasets/midi_dataset_drums_extracted/Ramms...  \n",
       "2      ../datasets/midi_dataset_drums_extracted/Ramms...  \n",
       "5      ../datasets/midi_dataset_drums_extracted/Ramms...  \n",
       "6      ../datasets/midi_dataset_drums_extracted/Ramms...  \n",
       "...                                                  ...  \n",
       "40469  ../datasets/midi_dataset_drums_extracted/S.ROG...  \n",
       "40470  ../datasets/midi_dataset_drums_extracted/Wollt...  \n",
       "40472  ../datasets/midi_dataset_drums_extracted/stand...  \n",
       "40474  ../datasets/midi_dataset_drums_extracted/MM-pe...  \n",
       "40475  ../datasets/midi_dataset_drums_extracted/littl...  \n",
       "\n",
       "[21316 rows x 10 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extract_drums_df = load_extracted_drums_df(filtered_midi_df)\n",
    "extract_drums_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "\n",
    "We now filtered out all unwanted parts of our dataset and isolated the drum track to a new MIDI file.\n",
    "\n",
    "In the next step we will start to analyse the drum patterns that we extracted."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "musikinformatik_sose2021",
   "language": "python",
   "name": "musikinformatik_sose2021"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}