{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9f75e6f2-bf62-47e9-bc84-1307b533d3e4",
   "metadata": {},
   "source": [
    "# Mr.Kov\n",
    "Based on https://swiki.hfbk-hamburg.de/MusicTechnology/773"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bc9d57da-54df-4249-b5b3-4f7d1ffc5141",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import librosa\n",
    "import soundfile\n",
    "from typing import List\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.manifold import TSNE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4fdabcf7-4bee-4e67-8dfc-4f1cace0eec2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# basic parameters\n",
    "#path = 'datasets/audio/yodel.aif'\n",
    "path = 'datasets/audio/afguide.wav'\n",
    "\n",
    "n_fft = 1024"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "fec703f5-d91d-4cd8-82bb-66a924a01cf9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# data analysis\n",
    "\n",
    "data, sr = librosa.load(path, sr=48000, mono=True)\n",
    "spec = librosa.feature.melspectrogram(data, n_fft=n_fft, sr=sr, fmax=8000)\n",
    "data_spec_db = librosa.amplitude_to_db(spec)\n",
    "\n",
    "pca_1 = PCA(n_components=1)\n",
    "tsne_1 = TSNE(n_components=1, random_state=42)\n",
    "data_spec_1 = pca_1.fit_transform(data_spec_db.T)\n",
    "data_tsne_1 = tsne_1.fit_transform(data_spec_db.T)\n",
    "\n",
    "order_pca = np.argsort(data_spec_1[:,0])\n",
    "order_tsne = np.argsort(data_tsne_1[:,0])\n",
    "\n",
    "\n",
    "fft = librosa.stft(data, n_fft=n_fft)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0a0d0e3f-b298-4316-b921-05509be32450",
   "metadata": {},
   "outputs": [],
   "source": [
    "def random_jump(max_distance: float) -> int:\n",
    "    random_distance = np.random.uniform((-1)*max_distance, max_distance)\n",
    "    return int(np.round(random_distance))\n",
    "        \n",
    "def find_similar_frame_index(order, frame_index: int, max_distance: float) -> int:\n",
    "    last_frame_index = len(order)-1\n",
    "    frame_index = frame_index % last_frame_index\n",
    "    selection = np.where(order == frame_index)\n",
    "    i = selection[0][0] + random_jump(max_distance)\n",
    "    i = np.clip(i, 0, last_frame_index)\n",
    "    return order[i]\n",
    "\n",
    "def generate_frame_indices(num_frames: int, start_frame: int, max_distance: float, order) -> List[int]:\n",
    "    frames = []\n",
    "    cur_pos = start_frame\n",
    "    for _ in range(num_frames):\n",
    "        frames.append(cur_pos)\n",
    "        cur_pos = find_similar_frame_index(order, cur_pos + 1, max_distance)\n",
    "    return frames\n",
    "    \n",
    "def mrkov(num_frames: int, start_frame: int, max_distance: float, order) -> np.ndarray:\n",
    "    reordered_indices = generate_frame_indices(num_frames, start_frame, max_distance, order)\n",
    "    fft_reordered = fft[:, reordered_indices]\n",
    "    return librosa.istft(fft_reordered)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e075c133-ea7d-47a1-9e18-32b72d125fbf",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = mrkov(10000, 0, 1, order_pca)\n",
    "soundfile.write(file=\"datasets/audio/mrkov_af_test.wav\", data=data, samplerate=sr)\n",
    "\n",
    "data = mrkov(10000, 0, 1, order_tsne)\n",
    "soundfile.write(file=\"datasets/audio/mrkov_af_test_tsne.wav\", data=data, samplerate=sr)\n",
    "\n",
    "data = mrkov(10000, 0, 0.6, order_tsne)\n",
    "soundfile.write(file=\"datasets/audio/mrkov_af_test_tsne2.wav\", data=data, samplerate=sr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a3fe9df-6206-4090-a1f3-960796ce4711",
   "metadata": {},
   "source": [
    "# Exploring the functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 515,
   "id": "4ca3766c-b564-40e0-bb38-d44526fa64d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 515,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random_jump(4.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 516,
   "id": "c7f7bc2b-4399-4c5b-bc3e-f10446f32430",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56"
      ]
     },
     "execution_count": 516,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_similar_frame(56, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 517,
   "id": "f3711a44-ddc7-4b16-aee6-d2e1f40d538f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56"
      ]
     },
     "execution_count": 517,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_similar_frame(56, 1.4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 615,
   "id": "22008c45-0bbd-4a66-8095-499ee31ee272",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([], dtype=int64),)"
      ]
     },
     "execution_count": 615,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "zz = np.array([1, 2, 3, 4])\n",
    "x = np.where(zz == 9)\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 612,
   "id": "399609f6-30eb-4052-a6cd-464118aecdea",
   "metadata": {},
   "outputs": [],
   "source": [
    "mkov_next = mrkov_next_frame_function(0, 1.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 519,
   "id": "39a45bae-3d56-436d-8b6f-60c0ba6eed15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 519,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mkov_next()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 520,
   "id": "d52550fa-6b38-4ff4-b6da-5b2d85ed0ccd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "307"
      ]
     },
     "execution_count": 520,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mkov_next()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 521,
   "id": "a3b75c70-ffd2-4c66-831d-a4b7c3769bed",
   "metadata": {},
   "outputs": [],
   "source": [
    "mkov_next = mrkov_next_frame_function(0, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 522,
   "id": "3bcb761a-d5ad-4f57-b3e8-5801280aa598",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 522,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mkov_next()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 523,
   "id": "f2c44821-a05f-478c-895a-c579680e9bc5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 523,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mkov_next()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9dc23c66-edaa-43fb-9fed-fd1ddae65ae5",
   "metadata": {},
   "outputs": [],
   "source": [
    "plot.xlim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 524,
   "id": "0234cb71-269c-4f50-befa-172872ce5cb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6, 7, 8, 9]"
      ]
     },
     "execution_count": 524,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mrkov_generate_frame_indices(10, 0, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 525,
   "id": "badf14f0-c7b0-4eee-a6e2-e34f39510b09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[336, 10, 236, 237, 238, 239, 1138, 1523, 1524]"
      ]
     },
     "execution_count": 525,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mrkov_generate_frame_indices(10, 0, 0.7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 526,
   "id": "84ec1290-bb48-45e8-9b41-a5bcb6877ba9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.11133909, 0.12150038, 0.10952761, ..., 0.04896518, 0.04674239,\n",
       "       0.04102705], dtype=float32)"
      ]
     },
     "execution_count": 526,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mrkov(10, 0, 1.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 527,
   "id": "af064ef6-9156-4875-b2da-b76fa00765b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.10413684, -0.09765087, -0.08832423, ...,  0.01890055,\n",
       "        0.01941993,  0.03032707], dtype=float32)"
      ]
     },
     "execution_count": 527,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mrkov_generate(1000, 0, 0.55)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 530,
   "id": "c08ca004-382f-4f7e-9eec-d627e0ec4c19",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = mrkov_generate(1000, 0, 0.55)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 531,
   "id": "03d4f7ae-1971-46e8-9f28-3a3244f6820c",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = mrkov_generate(1000, 0, 0.55)\n",
    "soundfile.write(file=\"datasets/audio/mrkov_test.wav\", data=data, samplerate=sr)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
